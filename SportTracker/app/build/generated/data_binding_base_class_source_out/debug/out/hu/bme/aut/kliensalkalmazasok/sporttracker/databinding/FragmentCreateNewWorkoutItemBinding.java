// Generated by view binder compiler. Do not edit!
package hu.bme.aut.kliensalkalmazasok.sporttracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import hu.bme.aut.kliensalkalmazasok.sporttracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCreateNewWorkoutItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCreate;

  @NonNull
  public final CheckBox cbCompleted;

  @NonNull
  public final TextInputEditText etDate;

  @NonNull
  public final EditText etDescription;

  @NonNull
  public final EditText etDuration;

  @NonNull
  public final Spinner spType;

  @NonNull
  public final TextInputLayout tilDate;

  private FragmentCreateNewWorkoutItemBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnCreate, @NonNull CheckBox cbCompleted, @NonNull TextInputEditText etDate,
      @NonNull EditText etDescription, @NonNull EditText etDuration, @NonNull Spinner spType,
      @NonNull TextInputLayout tilDate) {
    this.rootView = rootView;
    this.btnCreate = btnCreate;
    this.cbCompleted = cbCompleted;
    this.etDate = etDate;
    this.etDescription = etDescription;
    this.etDuration = etDuration;
    this.spType = spType;
    this.tilDate = tilDate;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCreateNewWorkoutItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCreateNewWorkoutItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_create_new_workout_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCreateNewWorkoutItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCreate;
      Button btnCreate = ViewBindings.findChildViewById(rootView, id);
      if (btnCreate == null) {
        break missingId;
      }

      id = R.id.cbCompleted;
      CheckBox cbCompleted = ViewBindings.findChildViewById(rootView, id);
      if (cbCompleted == null) {
        break missingId;
      }

      id = R.id.etDate;
      TextInputEditText etDate = ViewBindings.findChildViewById(rootView, id);
      if (etDate == null) {
        break missingId;
      }

      id = R.id.etDescription;
      EditText etDescription = ViewBindings.findChildViewById(rootView, id);
      if (etDescription == null) {
        break missingId;
      }

      id = R.id.etDuration;
      EditText etDuration = ViewBindings.findChildViewById(rootView, id);
      if (etDuration == null) {
        break missingId;
      }

      id = R.id.spType;
      Spinner spType = ViewBindings.findChildViewById(rootView, id);
      if (spType == null) {
        break missingId;
      }

      id = R.id.tilDate;
      TextInputLayout tilDate = ViewBindings.findChildViewById(rootView, id);
      if (tilDate == null) {
        break missingId;
      }

      return new FragmentCreateNewWorkoutItemBinding((LinearLayout) rootView, btnCreate,
          cbCompleted, etDate, etDescription, etDuration, spType, tilDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
